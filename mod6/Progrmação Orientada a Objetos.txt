Progrmação Orientada a Objetos

Programação orientada a objetos é um jeito de programar onde a gente organiza o código em objetos, que são como "coisas" que representam algo do mundo real ou conceitos do sistema. Esses objetos têm atributos (que são as características, tipo o nome ou idade de uma pessoa) e métodos (que são as ações, como andar ou falar).
Ela se baseia em quatro ideias principais:
1.	Encapsulamento: Protege os dados e só mostra o que é necessário.
2.	Herança: Permite reaproveitar código criando "filhos" de uma classe "mãe".
3.	Polimorfismo: Faz com que objetos diferentes possam ser usados de formas parecidas.
4.	Abstração: Ajuda a focar só no que é importante, escondendo detalhes desnecessários.
É um estilo que deixa o código mais organizado, fácil de entender e de reaproveitar.

Progrmação Procedural

Programação procedural é um jeito de programar onde a gente organiza o código em funções que realizam tarefas específicas. O programa é escrito como uma sequência de passos (ou procedimentos), com cada função resolvendo uma parte do problema.
Os dados e as funções geralmente ficam separados, e as funções são chamadas para manipular os dados quando necessário. A ideia é seguir uma ordem lógica, tipo um passo a passo, para resolver o problema.
É um estilo mais direto, bom para problemas simples, mas pode ficar difícil de manter em sistemas maiores porque os dados e o comportamento não estão "amarrados" como na programação orientada a objetos.

